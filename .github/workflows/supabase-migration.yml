name: Database Migration Checks

on:
  push:
    paths:
      - "ufa/services/transactional-supabase-foobar/migrations/**"
      - "ufa/services/transactional-supabase-foobar/src/database/schema.ts"
      - ".github/workflows/supabase-migration.yml"
  pull_request:
    paths:
      - "ufa/services/transactional-supabase-foobar/migrations/**"
      - "ufa/services/transactional-supabase-foobar/src/database/schema.ts"

jobs:
  validate-migrations:
    name: Validate Database Migrations (Dry Run)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ufa/services/transactional-supabase-foobar

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Validate migrations against production
        run: |
          # Check migration consistency
          npx drizzle-kit check:pg --out=./migrations
          # Test schema validity against production (dry run)
          npx drizzle-kit push:pg --dry-run --schema=./src/database/schema.ts --url="$DATABASE_URL"
        env:
          DATABASE_URL: ${{ secrets.SUPABASE_DB_URL_PRODUCTION }}
          NODE_ENV: production

  deploy-migrations:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: validate-migrations
    if: github.ref == 'refs/heads/main'
    defaults:
      run:
        working-directory: ufa/services/transactional-supabase-foobar

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Apply migrations to production
        run: npx drizzle-kit migrate:pg --out=./migrations --url="$DATABASE_URL"
        env:
          DATABASE_URL: ${{ secrets.SUPABASE_DB_URL_PRODUCTION }}
          NODE_ENV: production
