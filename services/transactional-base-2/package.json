{
  "name": "@workspace/transactional-base-2",
  "version": "1.0.0",
  "description": "Self-hosted Supabase for transactional workloads",
  "main": "dist/index.js",
  "type": "module",
  "scripts": {
    "build": "tsc",
    "dev": "npm run db:setup && npm run db:wait-ready && npm run db:migrate && tsx watch src/server.ts",
    "dev:server-only": "tsx watch src/server.ts",
    "start": "node dist/server.js",
    "clean": "rm -rf dist",
    "typecheck": "tsc --noEmit",
    "db:setup": "docker compose up -d",
    "db:stop": "docker compose down",
    "db:reset": "docker compose down -v --remove-orphans && rm -rf ./volumes/db/data && docker compose up -d && npm run db:wait-ready && npm run db:migrate",
    "db:reset:full": "./reset.sh",
    "db:wait-ready": "echo '⏳ Waiting for containers to be healthy...' && docker compose wait db supavisor && echo '✅ Containers are healthy!' && tsx src/scripts/wait-for-services.ts",
    "db:ensure-ready": "npm run db:wait-ready && npm run db:migrate",
    "db:generate": "drizzle-kit generate:pg",
    "db:migrate": "tsx src/scripts/migrate.ts",
    "db:seed": "tsx src/scripts/seed.ts",
    "db:studio": "drizzle-kit studio",
    "test:realtime": "node dist/test-realtime.js",
    "test:realtime:dev": "tsx src/test-realtime.ts"
  },
  "dependencies": {
    "@fastify/cors": "^10.0.1",
    "@fastify/swagger": "^9.5.1",
    "@fastify/swagger-ui": "^5.2.3",
    "@supabase/realtime-js": "^2.10.2",
    "@supabase/supabase-js": "^2.39.1",
    "@workspace/models": "workspace:*",
    "dotenv": "^16.3.1",
    "drizzle-orm": "^0.29.1",
    "drizzle-zod": "^0.5.1",
    "fastify": "^5.4.0",
    "pg": "^8.11.3",
    "ws": "^8.18.0",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@repo/eslint-config": "workspace:*",
    "@repo/typescript-config": "workspace:*",
    "@types/node": "^20.0.0",
    "@types/pg": "^8.10.9",
    "@types/ws": "^8.5.10",
    "drizzle-kit": "^0.20.7",
    "tsx": "^4.7.0",
    "typescript": "^5.3.0"
  },
  "keywords": [
    "supabase",
    "realtime",
    "self-hosted",
    "docker"
  ],
  "author": "",
  "license": "MIT"
}
