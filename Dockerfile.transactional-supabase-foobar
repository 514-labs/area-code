# syntax = docker/dockerfile:1

FROM node:20-alpine AS base

LABEL fly_launch_runtime="Node.js"

# Builder stage - prune the monorepo
FROM base AS builder
RUN apk update
RUN apk add --no-cache libc6-compat

# Set working directory
WORKDIR /app

# Install pnpm and turbo globally
RUN npm install -g pnpm turbo

# Copy entire monorepo for pruning
COPY . .

# Generate a partial monorepo with a pruned lockfile for transactional-supabase-foobar
RUN turbo prune transactional-supabase-foobar --docker

# Installer stage - install dependencies and build
FROM base AS installer
RUN apk update
RUN apk add --no-cache libc6-compat

WORKDIR /app

# Install pnpm
RUN npm install -g pnpm

# First install the dependencies (as they change less often)
# Copy pruned package.json files
COPY --from=builder /app/out/json/ .

# Install dependencies using the pruned lockfile
RUN pnpm install --frozen-lockfile

# Build the project
# Copy pruned source files
COPY --from=builder /app/out/full/ .

# Build the specific service
RUN pnpm turbo run build --filter=transactional-supabase-foobar

# Production stage
FROM node:20-alpine AS runner

WORKDIR /app

# Create non-root user for security
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nodejs

# Install pnpm for production
RUN npm install -g pnpm

# Copy pruned package.json files for production install
COPY --from=builder /app/out/json/ .

# Install only production dependencies
RUN pnpm install --frozen-lockfile --prod

# Copy the built application
COPY --from=installer --chown=nodejs:nodejs /app/ufa/services/transactional-supabase-foobar/dist ./ufa/services/transactional-supabase-foobar/dist

# Copy any additional runtime files if needed
COPY --from=installer --chown=nodejs:nodejs /app/ufa/services/transactional-supabase-foobar/package.json ./ufa/services/transactional-supabase-foobar/

# Set working directory to the service
WORKDIR /app/ufa/services/transactional-supabase-foobar

# Change ownership to nodejs user
RUN chown -R nodejs:nodejs /app

# Switch to non-root user
USER nodejs

# Expose port
EXPOSE 8082

# Start the server
CMD ["node", "dist/services/transactional-supabase-foobar/src/server.js"]